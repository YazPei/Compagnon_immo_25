version: "3.9"

services:
  postgres-airflow:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - airflow_db:/var/lib/postgresql/data
    networks:
      - ml_net

  airflow:
    image: apache/airflow:2.9.0
    depends_on:
      - postgres-airflow
    # 👉 Charge les secrets/params depuis .env (voir plus bas)
    env_file:
      - .env
    environment:
      # Airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
      AIRFLOW__CORE__EXECUTOR: "LocalExecutor"
      AIRFLOW__CORE__DEFAULT_TIMEZONE: "Europe/Paris"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres-airflow:5432/airflow"

      # -------- DagsHub / MLflow (depuis .env) --------
      # MLFLOW_TRACKING_URI, MLFLOW_TRACKING_USERNAME, MLFLOW_TRACKING_PASSWORD
      # sont injectées via .env (ne pas dupliquer ici)
      #
      # Optionnel : exposer une connection Airflow prête à l’emploi (HTTP) vers l'endpoint MLflow de DagsHub
      # ATTENTION : encodage URL si caractères spéciaux dans le token !
      AIRFLOW_CONN_DAGSHUB_MLFLOW: "https://${MLFLOW_TRACKING_USERNAME}:${MLFLOW_TRACKING_PASSWORD}@dagshub.com/${DAGSHUB_REPO_OWNER}/${DAGSHUB_REPO_NAME}.mlflow"

      # Optionnel : variables “génériques” DagsHub accessibles dans les DAGs
      DAGSHUB_USER: "${DAGSHUB_USER}"
      DAGSHUB_TOKEN: "${DAGSHUB_TOKEN}"
      DAGSHUB_REPO_OWNER: "${DAGSHUB_REPO_OWNER}"
      DAGSHUB_REPO_NAME: "${DAGSHUB_REPO_NAME}"

    command: >
      bash -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname a --lastname b --role Admin --email admin@example.com &&
      airflow webserver & airflow scheduler
      "
    ports:
      - "8081:8080"
    volumes:
      - ./:/opt/airflow/repo
      - ./dags:/opt/airflow/dags
      # Optionnel : pour Git/DVC avec token via .netrc (voir étape 3)
      # - ./secrets/netrc:/home/airflow/.netrc:ro
    working_dir: /opt/airflow
    networks:
      - ml_net

volumes:
  airflow_db:

networks:
  ml_net:
    external: true
